"use strict";(self.webpackChunktm_docs=self.webpackChunktm_docs||[]).push([[519],{3905:function(e,t,n){n.d(t,{Zo:function(){return d},kt:function(){return f}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},d=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},p=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,c=e.parentName,d=l(e,["components","mdxType","originalType","parentName"]),p=s(n),f=o,m=p["".concat(c,".").concat(f)]||p[f]||u[f]||a;return n?r.createElement(m,i(i({ref:t},d),{},{components:n})):r.createElement(m,i({ref:t},d))}));function f(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=p;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var s=2;s<a;s++)i[s]=n[s];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}p.displayName="MDXCreateElement"},69:function(e,t,n){n.r(t),n.d(t,{frontMatter:function(){return l},contentTitle:function(){return c},metadata:function(){return s},toc:function(){return d},default:function(){return p}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],l={id:"install",title:"Introduction",sidebar_label:"Introduction",slug:"/"},c=void 0,s={unversionedId:"Getting_started/install",id:"Getting_started/install",isDocsHomePage:!1,title:"Introduction",description:"Trial Monitor is a tool that enables developers and researchers to create personalized web dashboards for monitoring participants in technology-enabled field trials. The tool was designed to reduce the work of developing one\u2019s own dashboard, the need to adapt the technology stack to an existing dashboard, or the need to create a different dashboard tool for each project.",source:"@site/docs/01-Getting_started/01-install.md",sourceDirName:"01-Getting_started",slug:"/",permalink:"/trial-monitor/",tags:[],version:"current",sidebarPosition:1,frontMatter:{id:"install",title:"Introduction",sidebar_label:"Introduction",slug:"/"},sidebar:"tutorialSidebar",next:{title:"Configuration",permalink:"/trial-monitor/Getting_started/configuration"}},d=[{value:"Installation",id:"installation",children:[]},{value:"Running Trial Monitor",id:"running-trial-monitor",children:[]},{value:"Requirements",id:"requirements",children:[]}],u={toc:d};function p(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},u,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("p",null,"Trial Monitor is a tool that enables developers and researchers to create personalized web dashboards for monitoring participants in technology-enabled field trials. The tool was designed to reduce the work of developing one\u2019s own dashboard, the need to adapt the technology stack to an existing dashboard, or the need to create a different dashboard tool for each project."),(0,a.kt)("p",null,"Trial Monitor uses simple configuration files to define the connection to different databases, the types of visualizations to be used, and the user interface that researchers will see to make sense of the user-generated data."),(0,a.kt)("h2",{id:"installation"},"Installation"),(0,a.kt)("p",null,"Trial Monitor can either be installed directly on your machine or use through Docker. In the repository, we provide a config with examples and sample data, as well as Docker files for easy deployment. To install Trial Monitor on your machine:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},"Clone the repository on your machine")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"git clone https://github.com/fraunhoferportugal/trial-monitor.git\n")),(0,a.kt)("ol",{start:2},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Rename ",(0,a.kt)("inlineCode",{parentName:"p"},"config.template")," to ",(0,a.kt)("inlineCode",{parentName:"p"},"config"))),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Install the dependencies"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"yarn install\n")),(0,a.kt)("ol",{start:4},(0,a.kt)("li",{parentName:"ol"},"Edit the files in the ",(0,a.kt)("inlineCode",{parentName:"li"},"config")," folder according to the needs of your project")),(0,a.kt)("h2",{id:"running-trial-monitor"},"Running Trial Monitor"),(0,a.kt)("p",null,"To use Trial Monitor directly on your machine just run:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"yarn run dev\n")),(0,a.kt)("p",null,"Or use can use the ",(0,a.kt)("inlineCode",{parentName:"p"},"docker-compose")," file:"),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre"},"docker-compose -f docker-compose.yaml up // Production\n\ndocker-compose -f docker-compose.dev.yaml up  // Development\n")),(0,a.kt)("p",null,"In development mode, trial monitor will run by default on port ",(0,a.kt)("inlineCode",{parentName:"p"},"3000"),". When running in development mode all changes in the config files will be automatically reflected on the interface."),(0,a.kt)("h2",{id:"requirements"},"Requirements"),(0,a.kt)("p",null,"Ensure that you have ",(0,a.kt)("a",{parentName:"p",href:"https://nodejs.org/"},"Node")," installed on your machine or Docker according to your desired set up."))}p.isMDXComponent=!0}}]);